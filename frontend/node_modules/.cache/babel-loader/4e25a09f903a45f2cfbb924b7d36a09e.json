{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Game.js\";\nimport React, { Component } from 'react';\nimport CardDeck from './CardDeck';\nexport class Game extends Component {\n  constructor() {\n    super();\n\n    this.onCardClick = card => {\n      console.log(this.state.card.game);\n      console.log(this.state.checkCards.length < 2);\n\n      if (this.state.checkCards.length < 2 && !this.state.checkCards.includes(card)) {\n        this.setState({\n          checkCards: [...this.state.checkCards, card]\n        });\n      }\n\n      if (this.state.checkCards.length === 2) {\n        if (this.state.checkCards[0].pair_name === this.state.checkCards[1].pair_name) {\n          let filterCards = this.state.cards.filter(card => !this.state.checkCards.includes(card));\n          this.setState({\n            cards: filterCards\n          });\n          this.setState({\n            checkCards: []\n          });\n          console.log(\"you made a pair\");\n        } else {\n          console.log(\"no pair\");\n          this.setState({\n            checkCards: []\n          });\n        }\n      }\n    };\n\n    this.state = {\n      cards: [],\n      checkCards: [],\n      matched: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/cards\").then(response => response.json()).then(cards => this.setState({\n      cards\n    }));\n  }\n\n  //card is clicked, when click happens     \n  //set flipped state to true\n  // when the flipped state is set to true, render frontImg on that card\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        cardData: this.state.cards,\n        onCardClick: this.onCardClick,\n        checkCards: this.state.checkCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Game;","map":{"version":3,"sources":["/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Game.js"],"names":["React","Component","CardDeck","Game","constructor","onCardClick","card","console","log","state","game","checkCards","length","includes","setState","pair_name","filterCards","cards","filter","matched","componentDidMount","fetch","then","response","json","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAChCG,EAAAA,WAAW,GAAE;AACT;;AADS,SAgBbC,WAhBa,GAgBEC,IAAD,IAAU;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,IAAX,CAAgBI,IAA5B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,UAAX,CAAsBC,MAAtB,GAA+B,CAA3C;;AACA,UAAG,KAAKH,KAAL,CAAWE,UAAX,CAAsBC,MAAtB,GAA+B,CAA/B,IAAoC,CAAC,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,QAAtB,CAA+BP,IAA/B,CAAxC,EAA8E;AAC1E,aAAKQ,QAAL,CAAc;AAACH,UAAAA,UAAU,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,UAAf,EAA2BL,IAA3B;AAAb,SAAd;AAEH;;AAAA,UAAG,KAAKG,KAAL,CAAWE,UAAX,CAAsBC,MAAtB,KAAiC,CAApC,EAAsC;AACnC,YAAG,KAAKH,KAAL,CAAWE,UAAX,CAAsB,CAAtB,EAAyBI,SAAzB,KAAuC,KAAKN,KAAL,CAAWE,UAAX,CAAsB,CAAtB,EAAyBI,SAAnE,EAA6E;AACzE,cAAIC,WAAW,GAAG,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAyBZ,IAAD,IAAS,CAAC,KAAKG,KAAL,CAAWE,UAAX,CAAsBE,QAAtB,CAA+BP,IAA/B,CAAlC,CAAlB;AACA,eAAKQ,QAAL,CAAc;AAACG,YAAAA,KAAK,EAAED;AAAR,WAAd;AACA,eAAKF,QAAL,CAAc;AAACH,YAAAA,UAAU,EAAE;AAAb,WAAd;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,SALD,MAKK;AAACD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACN,eAAKM,QAAL,CAAc;AAACH,YAAAA,UAAU,EAAE;AAAb,WAAd;AACH;AAEA;AACJ,KAjCY;;AAEL,SAAKF,KAAL,GAAa;AACTQ,MAAAA,KAAK,EAAE,EADE;AAETN,MAAAA,UAAU,EAAE,EAFH;AAGTQ,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKP;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOL,KAAD,IAAU,KAAKH,QAAL,CAAc;AAACG,MAAAA;AAAD,KAAd,CAFhB;AAIH;;AA4BG;AACA;AACA;AAMJQ,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAA,6BACI,QAAC,QAAD;AACA,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWQ,KADrB;AAEA,QAAA,WAAW,EAAE,KAAKZ,WAFlB;AAGA,QAAA,UAAU,EAAE,KAAKI,KAAL,CAAWE;AAHvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA/D+B;AAkEpC,eAAeR,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport CardDeck from './CardDeck'\n\nexport class Game extends Component {\n    constructor(){\n        super();\n            this.state = {\n                cards: [],\n                checkCards: [],\n                matched: []\n            }\n    }\n   \n    componentDidMount() {\n        fetch(\"http://localhost:3000/cards\")\n        .then((response) => response.json())\n        .then((cards) =>this.setState({cards}))\n        \n    }\n\n    onCardClick = (card) => {\n        console.log(this.state.card.game)\n        console.log(this.state.checkCards.length < 2)\n        if(this.state.checkCards.length < 2 && !this.state.checkCards.includes(card) ){\n            this.setState({checkCards: [...this.state.checkCards, card]}\n                )\n        }if(this.state.checkCards.length === 2){ \n            if(this.state.checkCards[0].pair_name === this.state.checkCards[1].pair_name){\n                let filterCards = this.state.cards.filter((card)=> !this.state.checkCards.includes(card))\n                this.setState({cards: filterCards})\n                this.setState({checkCards: []})\n                console.log(\"you made a pair\")\n            }else{console.log(\"no pair\")\n            this.setState({checkCards: []})\n        }\n\n        }\n    }\n\n    \n\n  \n\n    \n          \n        \n        //card is clicked, when click happens     \n        //set flipped state to true\n        // when the flipped state is set to true, render frontImg on that card\n    \n\n\n   \n\n    render() {\n        \n\n        return (\n            <div>\n                <CardDeck \n                cardData={this.state.cards}\n                onCardClick={this.onCardClick}\n                checkCards={this.state.checkCards}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}