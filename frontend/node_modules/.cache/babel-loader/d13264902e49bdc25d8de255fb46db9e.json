{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Game.js\";\nimport React, { Component } from 'react';\nimport CardDeck from './CardDeck';\nexport class Game extends Component {\n  constructor() {\n    super();\n\n    this.onCardClick = card => {\n      console.log(this.state.checkCards.length < 2);\n\n      if (this.state.checkCards.length < 2 && !this.state.checkCards.includes(card)) {\n        this.setState({\n          checkCards: [...this.state.checkCards, card]\n        });\n      }\n\n      if (this.state.checkCards.length === 2) {\n        if (this.state.checkCards[0].pair_name === this.state.checkCards[1].pair_name) {\n          //let this state of 2 cards.push into matched cards array.push\n          this.setState({\n            matched: [...this.state.checkCards]\n          });\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.props.cardData.frontImg,\n            className: \"card-img-top\",\n            alt: this.props.cardData.pair_name,\n            value: this.props.cardData.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }, this); // let filterCards = this.state.cards.filter((card)=> !this.state.checkCards.includes(card))\n          // this.setState({cards: filterCards})\n\n          this.setState({\n            checkCards: []\n          });\n          console.log(\"you made a pair\");\n        } else {\n          console.log(\"no pair\");\n          this.setState({\n            checkCards: []\n          });\n        }\n      }\n    };\n\n    this.state = {\n      cards: [],\n      checkCards: [],\n      matched: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/cards\").then(response => response.json()).then(cards => this.setState({\n      cards\n    }));\n  }\n\n  //card is clicked, when click happens     \n  //set flipped state to true\n  // when the flipped state is set to true, render frontImg on that card\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        cardData: this.state.cards,\n        onCardClick: this.onCardClick,\n        checkCards: this.state.checkCards,\n        matched: this.state.matched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Game;","map":{"version":3,"sources":["/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Game.js"],"names":["React","Component","CardDeck","Game","constructor","onCardClick","card","console","log","state","checkCards","length","includes","setState","pair_name","matched","props","cardData","frontImg","id","cards","componentDidMount","fetch","then","response","json","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAChCG,EAAAA,WAAW,GAAE;AACT;;AADS,SAebC,WAfa,GAeEC,IAAD,IAAU;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,GAA+B,CAA3C;;AACA,UAAG,KAAKF,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,GAA+B,CAA/B,IAAoC,CAAC,KAAKF,KAAL,CAAWC,UAAX,CAAsBE,QAAtB,CAA+BN,IAA/B,CAAxC,EAA8E;AAC1E,aAAKO,QAAL,CAAc;AAACH,UAAAA,UAAU,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,UAAf,EAA2BJ,IAA3B;AAAb,SAAd;AAEH;;AAAA,UAAG,KAAKG,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,KAAiC,CAApC,EAAsC;AACnC,YAAG,KAAKF,KAAL,CAAWC,UAAX,CAAsB,CAAtB,EAAyBI,SAAzB,KAAuC,KAAKL,KAAL,CAAWC,UAAX,CAAsB,CAAtB,EAAyBI,SAAnE,EAA6E;AACzE;AACA,eAAKD,QAAL,CAAc;AAACE,YAAAA,OAAO,EAAE,CAAC,GAAG,KAAKN,KAAL,CAAWC,UAAf;AAAV,WAAd;AACA,8BAAO;AAAK,YAAA,GAAG,EAAE,KAAKM,KAAL,CAAWC,QAAX,CAAoBC,QAA9B;AACP,YAAA,SAAS,EAAC,cADH;AAEP,YAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoBH,SAFlB;AAGP,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,QAAX,CAAoBE;AAHpB;AAAA;AAAA;AAAA;AAAA,kBAAP,CAHyE,CAQzE;AACA;;AACA,eAAKN,QAAL,CAAc;AAACH,YAAAA,UAAU,EAAE;AAAb,WAAd;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,SAZD,MAYK;AAACD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACN,eAAKK,QAAL,CAAc;AAACH,YAAAA,UAAU,EAAE;AAAb,WAAd;AACH;AAEA;AACJ,KAtCY;;AAEL,SAAKD,KAAL,GAAa;AACTW,MAAAA,KAAK,EAAE,EADE;AAETV,MAAAA,UAAU,EAAE,EAFH;AAGTK,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKP;;AAEDM,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOH,KAAD,IAAU,KAAKP,QAAL,CAAc;AAACO,MAAAA;AAAD,KAAd,CAFhB;AAGH;;AAkCG;AACA;AACA;AAMJM,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAA,6BACI,QAAC,QAAD;AACA,QAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWW,KADrB;AAEA,QAAA,WAAW,EAAE,KAAKf,WAFlB;AAGA,QAAA,UAAU,EAAE,KAAKI,KAAL,CAAWC,UAHvB;AAIA,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWM;AAJpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AArE+B;AAwEpC,eAAeZ,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport CardDeck from './CardDeck'\n\nexport class Game extends Component {\n    constructor(){\n        super();\n            this.state = {\n                cards: [],\n                checkCards: [],\n                matched: []\n            }\n    }\n   \n    componentDidMount() {\n        fetch(\"http://localhost:3000/cards\")\n        .then((response) => response.json())\n        .then((cards) =>this.setState({cards}))\n    }\n\n    onCardClick = (card) => {\n        console.log(this.state.checkCards.length < 2)\n        if(this.state.checkCards.length < 2 && !this.state.checkCards.includes(card) ){\n            this.setState({checkCards: [...this.state.checkCards, card]}\n                )\n        }if(this.state.checkCards.length === 2){ \n            if(this.state.checkCards[0].pair_name === this.state.checkCards[1].pair_name){\n                //let this state of 2 cards.push into matched cards array.push\n                this.setState({matched: [...this.state.checkCards]})\n                return <img src={this.props.cardData.frontImg} \n                className=\"card-img-top\" \n                alt={this.props.cardData.pair_name}\n                value={this.props.cardData.id} \n                />\n                // let filterCards = this.state.cards.filter((card)=> !this.state.checkCards.includes(card))\n                // this.setState({cards: filterCards})\n                this.setState({checkCards: []})\n                console.log(\"you made a pair\")\n            }else{console.log(\"no pair\")\n            this.setState({checkCards: []})\n        }\n\n        }\n    }\n\n    \n\n  \n\n    \n          \n        \n        //card is clicked, when click happens     \n        //set flipped state to true\n        // when the flipped state is set to true, render frontImg on that card\n    \n\n\n   \n\n    render() {\n        \n\n        return (\n            <div>\n                <CardDeck \n                cardData={this.state.cards}\n                onCardClick={this.onCardClick}\n                checkCards={this.state.checkCards}\n                matched={this.state.matched}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}