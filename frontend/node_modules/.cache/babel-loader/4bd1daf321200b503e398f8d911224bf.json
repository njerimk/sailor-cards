{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Timer.js\";\nimport React, { Component } from 'react';\nexport default class Timer extends Component {\n  constructor() {\n    super();\n\n    this.secondstoTime = () => {\n      let hours = Math.floor(secs / (60 * 60));\n      let divisor_for_minutes = secs % (60 * 60);\n      let minutes = Math.floor(divisor_for_minutes / 60);\n      let divisor_for_seconds = divisor_for_minutes % 60;\n      let seconds = Math.ceil(divisor_for_seconds);\n      let obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    };\n\n    this.state = {\n      time: {},\n      seconds: 5\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({\n      time: timeLeftVar\n    });\n  }\n\n  startTimer() {\n    if (this.timer === 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    });\n\n    if (seconds === 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"m: \", this.state.time.m, \" s: \", this.state.time.s]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Timer.js"],"names":["React","Component","Timer","constructor","secondstoTime","hours","Math","floor","secs","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","obj","state","time","timer","startTimer","bind","countDown","componentDidMount","timeLeftVar","secondsToTime","setState","setInterval","clearInterval","render","m","s"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,aARc,GAQA,MAAI;AACd,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,IAAG,KAAK,EAAR,CAAf,CAAZ;AAEA,UAAIC,mBAAmB,GAAGD,IAAI,IAAI,KAAK,EAAT,CAA9B;AACA,UAAIE,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAWE,mBAAmB,GAAG,EAAjC,CAAd;AAEA,UAAIE,mBAAmB,GAAGF,mBAAmB,GAAG,EAAhD;AACA,UAAIG,OAAO,GAAGN,IAAI,CAACO,IAAL,CAAUF,mBAAV,CAAd;AAEA,UAAIG,GAAG,GAAG;AACN,aAAKT,KADC;AAEN,aAAKK,OAFC;AAGN,aAAKE;AAHC,OAAV;AAKA,aAAOE,GAAP;AACH,KAvBa;;AAEV,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYJ,MAAAA,OAAO,EAAE;AAArB,KAAb;AACA,SAAKK,KAAL,GAAa,CAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAmBDE,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,WAAW,GAAG,KAAKC,aAAL,CAAmB,KAAKR,KAAL,CAAWH,OAA9B,CAAlB;AACA,SAAKY,QAAL,CAAc;AAAER,MAAAA,IAAI,EAAEM;AAAR,KAAd;AACH;;AAEDJ,EAAAA,UAAU,GAAG;AACT,QAAG,KAAKD,KAAL,KAAe,CAAf,IAAoB,KAAKF,KAAL,CAAWH,OAAX,GAAqB,CAA5C,EAA+C;AAC3C,WAAKK,KAAL,GAAaQ,WAAW,CAAC,KAAKL,SAAN,EAAiB,IAAjB,CAAxB;AACH;AACJ;;AAEDA,EAAAA,SAAS,GAAE;AACP,QAAIR,OAAO,GAAG,KAAKG,KAAL,CAAWH,OAAX,GAAqB,CAAnC;AACA,SAAKY,QAAL,CAAc;AACVR,MAAAA,IAAI,EAAE,KAAKO,aAAL,CAAmBX,OAAnB,CADI;AAEVA,MAAAA,OAAO,EAAEA;AAFC,KAAd;;AAIA,QAAGA,OAAO,KAAK,CAAf,EAAkB;AACdc,MAAAA,aAAa,CAAC,KAAKT,KAAN,CAAb;AACH;AACJ;;AAEDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,wBACO,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,CADvB,UAC8B,KAAKb,KAAL,CAAWC,IAAX,CAAgBa,CAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtDwC","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Timer extends Component {\n    constructor() {\n        super();\n        this.state = { time: {}, seconds: 5 };\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n    }\n\n    secondstoTime=()=>{\n        let hours = Math.floor(secs /(60 * 60));\n\n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n\n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n\n        let obj = {\n            \"h\": hours,\n            \"m\": minutes,\n            \"s\": seconds\n        };\n        return obj;\n    }\n\n    componentDidMount() {\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\n        this.setState({ time: timeLeftVar});\n    }\n\n    startTimer() {\n        if(this.timer === 0 && this.state.seconds > 0) {\n            this.timer = setInterval(this.countDown, 1000);\n        }\n    }\n\n    countDown(){\n        let seconds = this.state.seconds - 1;\n        this.setState({\n            time: this.secondsToTime(seconds),\n            seconds: seconds,\n        });\n        if(seconds === 0) {\n            clearInterval(this.timer)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               m: {this.state.time.m} s: {this.state.time.s} \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}