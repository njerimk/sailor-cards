{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Timer.js\";\nimport React, { Component } from 'react';\nexport default class Timer extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      let timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    };\n\n    this.startTimer = () => {\n      if (this.timer === 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    };\n\n    this.countDown = () => {\n      let seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds === 0) {\n        clearInterval(this.timer);\n      }\n    };\n\n    this.state = {\n      time: {},\n      seconds: 100\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer();\n    this.countDown = this.countDown();\n  }\n\n  secondstoTime(secs) {\n    let hours = Math.floor(sec / (60 * 60));\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floot(divisor_for_minutes / 60);\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Timer.js"],"names":["React","Component","Timer","constructor","componentDidMount","timeLeftVar","secondsToTime","state","seconds","setState","time","startTimer","timer","setInterval","countDown","clearInterval","secondstoTime","secs","hours","Math","floor","sec","divisor_for_minutes","minutes","floot","divisor_for_seconds","ceil","obj","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,GAAG;AACV;;AADU,SAyBdC,iBAzBc,GAyBI,MAAM;AACpB,UAAIC,WAAW,GAAG,KAAKC,aAAL,CAAmB,KAAKC,KAAL,CAAWC,OAA9B,CAAlB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEL;AAAR,OAAd;AACH,KA5Ba;;AAAA,SA8BdM,UA9Bc,GA8BH,MAAM;AACb,UAAG,KAAKC,KAAL,KAAe,CAAf,IAAoB,KAAKL,KAAL,CAAWC,OAAX,GAAqB,CAA5C,EAA+C;AAC3C,aAAKI,KAAL,GAAaC,WAAW,CAAC,KAAKC,SAAN,EAAiB,IAAjB,CAAxB;AACH;AACJ,KAlCa;;AAAA,SAoCdA,SApCc,GAoCH,MAAM;AACb,UAAIN,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAAnC;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE,KAAKJ,aAAL,CAAmBE,OAAnB,CADI;AAEVA,QAAAA,OAAO,EAAEA;AAFC,OAAd;;AAIA,UAAGA,OAAO,KAAK,CAAf,EAAkB;AACdO,QAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACH;AACJ,KA7Ca;;AAEV,SAAKL,KAAL,GAAa;AAACG,MAAAA,IAAI,EAAE,EAAP;AAAWF,MAAAA,OAAO,EAAE;AAApB,KAAb;AACA,SAAKI,KAAL,GAAa,CAAb;AACA,SAAKD,UAAL,GAAkB,KAAKA,UAAL,EAAlB;AACA,SAAKG,SAAL,GAAiB,KAAKA,SAAL,EAAjB;AACH;;AAEDE,EAAAA,aAAa,CAACC,IAAD,EAAM;AACf,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,GAAG,IAAG,KAAK,EAAR,CAAd,CAAZ;AAEA,QAAIC,mBAAmB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA9B;AACA,QAAIM,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAWF,mBAAmB,GAAG,EAAjC,CAAd;AAEA,QAAIG,mBAAmB,GAAGH,mBAAmB,GAAG,EAAhD;AACA,QAAId,OAAO,GAAGW,IAAI,CAACO,IAAL,CAAUD,mBAAV,CAAd;AAEA,QAAIE,GAAG,GAAG;AACN,WAAKT,KADC;AAEN,WAAKK,OAFC;AAGN,WAAKf;AAHC,KAAV;AAKA,WAAOmB,GAAP;AACH;;AAwBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtDwC","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Timer extends Component {\n    constructor() {\n        super();\n        this.state = {time: {}, seconds: 100};\n        this.timer = 0;\n        this.startTimer = this.startTimer();\n        this.countDown = this.countDown();\n    }\n\n    secondstoTime(secs){\n        let hours = Math.floor(sec /(60 * 60));\n\n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floot(divisor_for_minutes / 60);\n\n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n\n        let obj = {\n            \"h\": hours,\n            \"m\": minutes,\n            \"s\": seconds\n        };\n        return obj;\n    }\n\n    componentDidMount=() => {\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\n        this.setState({ time: timeLeftVar});\n    }\n\n    startTimer=() => {\n        if(this.timer === 0 && this.state.seconds > 0) {\n            this.timer = setInterval(this.countDown, 1000);\n        }\n    }\n\n    countDown =() => {\n        let seconds = this.state.seconds - 1;\n        this.setState({\n            time: this.secondsToTime(seconds),\n            seconds: seconds,\n        });\n        if(seconds === 0) {\n            clearInterval(this.timer)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}