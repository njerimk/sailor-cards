{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Timer.js\";\nimport React, { Component } from 'react';\nexport default class Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      minutes: 1\n    };\n\n    this.secondstoTime = secs => {\n      let hours = Math.floor(secs / (60 * 60));\n      let divisor_for_minutes = secs % (60 * 60);\n      let minutes = Math.floor(divisor_for_minutes / 60);\n      let divisor_for_seconds = divisor_for_minutes % 60;\n      let seconds = Math.ceil(divisor_for_seconds);\n      let obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    };\n\n    this.componentDidMount = () => {\n      let timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    };\n\n    this.startTimer = () => {\n      if (this.timer === 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.state.countDown, 1000);\n      }\n    };\n\n    this.countDown = () => {\n      let seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.state.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds === 0) {\n        clearInterval(this.timer);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"m: \", this.state.time.m, \" s: \", this.state.time.s]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/njerimurugi-kamau/Flatiron/code/PHASE4/sailor-cards/frontend/src/Timer.js"],"names":["React","Component","Timer","state","minutes","secondstoTime","secs","hours","Math","floor","divisor_for_minutes","divisor_for_seconds","seconds","ceil","obj","componentDidMount","timeLeftVar","secondsToTime","setState","time","startTimer","timer","setInterval","countDown","clearInterval","render","m","s"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEtCE,KAFsC,GAE9B;AACRC,MAAAA,OAAO,EAAE;AADD,KAF8B;;AAAA,SAMzCC,aANyC,GAMxBC,IAAD,IAAU;AACtB,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,IAAG,KAAK,EAAR,CAAf,CAAZ;AAEA,UAAII,mBAAmB,GAAGJ,IAAI,IAAI,KAAK,EAAT,CAA9B;AACA,UAAIF,OAAO,GAAGI,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAd;AAEA,UAAIC,mBAAmB,GAAGD,mBAAmB,GAAG,EAAhD;AACA,UAAIE,OAAO,GAAGJ,IAAI,CAACK,IAAL,CAAUF,mBAAV,CAAd;AAEA,UAAIG,GAAG,GAAG;AACN,aAAKP,KADC;AAEN,aAAKH,OAFC;AAGN,aAAKQ;AAHC,OAAV;AAKA,aAAOE,GAAP;AACH,KArBwC;;AAAA,SAuBzCC,iBAvByC,GAuBvB,MAAI;AAClB,UAAIC,WAAW,GAAG,KAAKC,aAAL,CAAmB,KAAKd,KAAL,CAAWS,OAA9B,CAAlB;AACA,WAAKM,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEH;AAAR,OAAd;AACH,KA1BwC;;AAAA,SA4BzCI,UA5ByC,GA4B9B,MAAI;AACX,UAAG,KAAKC,KAAL,KAAe,CAAf,IAAoB,KAAKlB,KAAL,CAAWS,OAAX,GAAqB,CAA5C,EAA+C;AAC3C,aAAKS,KAAL,GAAaC,WAAW,CAAC,KAAKnB,KAAL,CAAWoB,SAAZ,EAAuB,IAAvB,CAAxB;AACH;AACJ,KAhCwC;;AAAA,SAkCzCA,SAlCyC,GAkC/B,MAAI;AACV,UAAIX,OAAO,GAAG,KAAKT,KAAL,CAAWS,OAAX,GAAqB,CAAnC;AACA,WAAKM,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWc,aAAX,CAAyBL,OAAzB,CADI;AAEVA,QAAAA,OAAO,EAAEA;AAFC,OAAd;;AAIA,UAAGA,OAAO,KAAK,CAAf,EAAkB;AACdY,QAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACH;AACJ,KA3CwC;AAAA;;AA6CzCI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,wBACO,KAAKtB,KAAL,CAAWgB,IAAX,CAAgBO,CADvB,UAC8B,KAAKvB,KAAL,CAAWgB,IAAX,CAAgBQ,CAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnDwC","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Timer extends Component {\n   \n       state = {\n       minutes: 1\n    }   \n\n    secondstoTime = (secs) => {\n        let hours = Math.floor(secs /(60 * 60));\n\n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n\n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n\n        let obj = {\n            \"h\": hours,\n            \"m\": minutes,\n            \"s\": seconds\n        };\n        return obj;\n    }\n\n    componentDidMount=()=>{\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\n        this.setState({ time: timeLeftVar});\n    }\n\n    startTimer=()=>{\n        if(this.timer === 0 && this.state.seconds > 0) {\n            this.timer = setInterval(this.state.countDown, 1000);\n        }\n    }\n\n    countDown=()=>{\n        let seconds = this.state.seconds - 1;\n        this.setState({\n            time: this.state.secondsToTime(seconds),\n            seconds: seconds,\n        });\n        if(seconds === 0) {\n            clearInterval(this.timer)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               m: {this.state.time.m} s: {this.state.time.s} \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}